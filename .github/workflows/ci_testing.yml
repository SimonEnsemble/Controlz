# https://github.com/SimonEnsemble/Controlz.jl

name: Build # the name of the GitHub Action (will be displayed on repo)

on: # when to run this action
  push:
    branches: [main] # run when a commit is made to the 'master' branch
  pull_request:
    branches: [main] # run when a PR is made against the 'master' branch
  workflow_dispatch: # run when a button is pressed on the repo Actions page
  
concurrency: # only allow one copy of the action to run at a time; new runs cancel old ones
  group: 'Controlz'
  cancel-in-progress: true
  
env: # environment variables, accessed via ${{env.var_name}}
  julia_version: '1.6.3'

jobs: # jobs run in parallel, unless a dependency is specified


  unit-tests: # will run the code's testing script to check for bugs
    runs-on: ubuntu-latest # the VM that runs the code will be an up-to-date Ubuntu system
    steps: # steps run sequentially within a job
      - uses: actions/checkout@v2 # a GitHub action that loads the repository onto the VM
      - uses: julia-actions/setup-julia@latest # a GitHub action that installs Julia on the VM
        with: # arguments to the setup-julia action
          version: ${{env.julia_version}} # get Julia at the version specified in `env` above
      - name: install matplotlib
        run: julia --project -e 'import Pkg; Pkg.add("Conda"); using Conda; Conda.add("matplotlib")'
      - name: build and test
        run: julia --project -e 'import Pkg; Pkg.instantiate(); Pkg.test()'
      
  
  deploy-docs: # will compile and upload the docs pages
    needs: unit-tests # the `unit-tests` job must succeed before this job will start
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{env.julia_version}}
      - name: install matplotlib
        run: julia --project -e 'import Pkg; Pkg.add("Conda"); using Conda; Conda.add("matplotlib")'
      - name: build
        run: julia --project -e 'import Pkg; Pkg.instantiate()'
      - name: deploy
        run: julia --project ./docs/make.jl
        env: # step-specific environment variables
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} # a password automatically generated by GitHub
          DOCUMENTER_KEY: ${{secrets.DOCUMENTER_KEY}} # a password set by Cory

